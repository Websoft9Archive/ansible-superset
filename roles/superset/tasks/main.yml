#1 Prepare for install
- name: Create Superset User
  user:
    name: superset
    shell: /usr/sbin/nologin
    create_home: no

- name: delete old installfiles
  shell: rm -rf /data/wwwroot/*
  
- name: Download and unarchive Superset
  unarchive:
    src: "{{superset_download_url}}"
    dest: /data/wwwroot
    remote_src: yes
    
- name: Rename Superset
  shell: if [ $( ls | grep "superset") ]; then mv *superset* superset; fi
  args:
    chdir: /data/wwwroot

- name: Create Superset-data directory
  file:
    path: /data/wwwroot/superset_data
    state: directory
    owner: superset
    group: superset
    
#2 Install by OS_family
- name: Install this role on {{ansible_os_family}}
  include: "{{ansible_os_family}}.yml"

- name: Open network outer
  lineinfile:
      dest: /data/wwwroot/superset/docker-compose.yml
      regexp: '      - "127.0.0.1:5432:5432"'
      line: '      - "5432:5432"'
      backrefs: yes
      
- name: Change superset-image flag
  lineinfile:
      dest: /data/wwwroot/superset/docker-compose.yml
      regexp: 'x-superset-image: &superset-image apache/superset:latest-dev'
      line: 'x-superset-image: &superset-image apache/superset:latest'
      backrefs: yes
  
#3 docker-compose add phppgadmin and config
- name: Docker compose Superset
  shell: |
    docker-compose up -d
  args:
    chdir: /data/wwwroot/superset

#4 configure Superset
- name: Create soft link
  shell:
    ln -sf /var/lib/docker/volumes /data/wwwroot/superset_data
    ln -sf /data/wwwroot/superset/docker  /data/wwwroot/superset_data
    ln -sf /data/wwwroot/superset/postgre  /data/wwwroot/superset_data
    ln -sf /data/wwwroot/superset/postgre-frontend  /data/wwwroot/superset_data

#5 version output
- name: Check Superset Version
  shell: |
    sudo echo -e "superset_version: `docker exec -it superset_app /bin/bash -c 'cat /app/superset-frontend/package.json |grep version |sed -n 1p |cut -d: -f 2'`\n" |sudo tee -a /data/logs/install_version.txt
    sudo echo -e "postgres_version: `docker exec -it superset_db /bin/bash -c 'psql -V |cut -d " " -f 3'`\n" |sudo tee -a /data/logs/install_version.txt
    sudo echo -e "redis_version: `docker exec -it superset_cache /bin/bash -c '/usr/local/bin/redis-server -v |cut -d " " -f 3 |cut -d "=" -f 2'`\n" |sudo tee -a /data/logs/install_version.txt

